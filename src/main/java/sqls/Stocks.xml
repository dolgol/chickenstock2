<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="stocks">
<select id="stockslist" resultType="ssg.com.a.dto.StocksDto" parameterType="ssg.com.a.dto.StockParam">
 		select Symbol, Market, Name , Sector, ListingDate, Representative
 		from stocks
 		
 		<if test="choice != null and choice !='' and search != null and search != '' ">
 			<if test="choice == 'name' ">
				where Name like concat('%', #{search}, '%')
			</if>
			
			<if test="choice == 'symbol' ">
				where Symbol like concat('%', #{search}, '%')
			</if>
 		</if>
 		order by Symbol desc
</select>

<select id="getstocks" parameterType="ssg.com.a.dto.StockParam" resultType="Integer">
	select count(*) from stocks 
		
		<if test="choice != null and choice !='' and search != null and search != '' ">
 			<if test="choice == 'Name' ">
				where Name like concat('%', #{search}, '%')
			</if>
			
			<if test="choice == 'Symbol' ">
			</if>
 		</if>
</select>
<select id="stocksdetail" parameterType="String" 
				resultType="ssg.com.a.dto.StocksDto">
	select Symbol, Market, Name , Sector, Industry, ListingDate, SettleMonth, Representative, HomePage
	from stocks
	where Symbol=#{symbol}
</select>

<!-- 댓글 -->

<select id="stockscommentlist" parameterType="String" resultType="ssg.com.a.dto.StocksComment">
	select seq, Symbol, user_id, content, write_date, ref, step, depth, del
	from stocks_comment
	where Symbol=#{symbol}
	order by write_date desc	
</select>

<insert id="stockscommentwrite" parameterType="ssg.com.a.dto.StocksComment">
	insert into stocks_comment(seq, Symbol, user_id, content, write_date, ref, step, depth, del)
	values(#{seq}, #{symbol}, #{user_id}, #{content}, now(), 0, 0, 0, 0)
</insert>



<select id="mypageLikeList" parameterType="String" resultType="ssg.com.a.dto.StocksDto">
	select *
	from stocks
	where Symbol in 
		(select Symbol
		from stocks_like
		where user_id=#{user_id})
</select>

<select id="mypageLikeScroll" parameterType="ssg.com.a.dto.MypageParam" resultType="ssg.com.a.dto.StocksDto">
	select *
	from stocks
	where Symbol in 
		(select Symbol
		from stocks_like
		where user_id=#{user_id})
	limit ${(pageNumber * 10)}, 10
</select>

<select id="mypageStocksAllComment" parameterType="java.lang.String" resultType="java.lang.Integer">
	select count(*) 
	from stocks_comment
	where user_id=#{user_id} and del=0
</select>

<select id="mypageStocksCommentList" parameterType="ssg.com.a.dto.MypageParam" resultType="ssg.com.a.dto.MypageStocksComment">
	select sc.seq as scseq, sc.user_id, sc.content, sc.write_date, sc.del, s.Symbol, s.Market, s.Name
	from stocks_comment sc, stocks s
	where sc.post_num = s.Symbol and sc.user_id=#{user_id} and sc.del=0
	order by sc.write_date desc
	limit ${(pageNumber * 10)}, 10
</select>

<update id="mypageStocksCommentDel" parameterType="java.lang.Integer">
	update stocks_comment
	set del=1
	where seq=#{seq}
</update>

 </mapper>