<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="News">

<select id="newslist" parameterType="ssg.com.a.dto.NewsParam"
		resultType="ssg.com.a.dto.NewsDto">
	select n.*
	from news n
	left join users u on n.user_id = u.user_id
	<if test="choice != null and choice != '' and search != null and search != '' ">
		<if test="choice == 'title'">
			where n.title like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'content'">
			where n.content like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'writer'">
			where n.write_id=#{search} and del=0
		</if>	
	</if>
	<!-- order by ref desc, step asc -->
	order by u.auth desc, n.seq desc
	limit ${(pageNumber * 10)}, 10
</select>
<!--
<select id="commentList" parameterType="ssg.com.a.dto.NewsParam" resultType="ssg.com.a.dto.NewsComment">
	select seq, post_num, user_id, content, write_date, ref, step, depth, del
	from news_comment
	where post_num=#{seq}
	order by ref desc, step asc
	limit ${(pageNumber * 10)}, 10
</select>
-->

<select id="getallnews" parameterType="ssg.com.a.dto.NewsParam"
		resultType="java.lang.Integer">
	select count(*) 
	from news
	<if test="choice != null and choice != '' and search != null and search != '' ">
		<if test="choice == 'title'">
			where title like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'content'">
			where content like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'writer'">
			where user_id=#{search} and del=0
		</if>	
	</if>
</select>

<insert id="newsnotice" parameterType="ssg.com.a.dto.NewsDto">
	insert into news(write_id, source, title, views, content, del, publication_date, image, user_id)
	values(#{write_id}, null, #{title}, 0, #{content}, 0, now(), null, #{write_id})
</insert>

<!-- (select ifnull(max(ref), 0)+1 from news b) -->

<insert id="newswrite" parameterType="ssg.com.a.dto.NewsDto">
	insert into news( title, write_id, content, publication_date, source, views, del, image)
	values(#{title}, #{write_id}, #{content}, #{publication_date}, #{source}, 0, 0, null)
</insert>

<select id="newsFind" parameterType="ssg.com.a.dto.NewsDto" resultType="ssg.com.a.dto.NewsDto">
    select * from news where title = #{title}
</select>

<select id="newsdetail" parameterType="java.lang.Integer" 
				resultType="ssg.com.a.dto.NewsDto">
	select seq, write_id, source, title, views, content, del, publication_date, image
	from news
	where seq=#{seq}
</select>

<update id="newsViewUpdate" parameterType="ssg.com.a.dto.NewsDto" >
	update news 
	set views=${(views+1)}
	where seq=#{seq}
</update>

<select id="newsget" parameterType="java.lang.Integer" resultType="ssg.com.a.dto.NewsDto">
	select seq, write_id, source, title, views, content, del, publication_date, image
	from news
	where seq=#{seq}
</select>

<update id="newsupdate" parameterType="ssg.com.a.dto.NewsDto" >
	update news 
	set title=#{title}, content=#{content} ,source=#{source}
	where seq=#{seq}
</update>

<update id="newsdelete" parameterType="ssg.com.a.dto.NewsDto">
	update news
	set del=1, title="", content="", source="", views=null, publication_date = "", write_id=""
	where seq=#{seq}
</update>

<!-- 답글 -->
<!-- 수정 -->
<update id="newsAnswerUpdate" parameterType="ssg.com.a.dto.NewsDto">
	update news_comment
	set step=step+1
	where ref=(select ref from (select ref from news_comment a where seq=#{seq}) A)
		and step>(select step from (select step from news_comment b where seq=#{seq}) B)
</update>

<!-- 추가 -->
<insert id="newsAnswerInsert" parameterType="ssg.com.a.dto.NewsDto">
	insert into news_comment(user_id, ref, step, depth, title, content, write_date, del, views)
	values(#{uesr_id}, (select ref from news_comment a where seq=#{seq}),
				  (select step from news_comment b where seq=#{seq})+1,
				  (select depth from news_comment c where seq=#{seq})+1,
			#{title}, #{content}, now(), 0, 0)
</insert>

<!-- 댓글(bbscomment) -->
<!-- 추가 -->
<insert id="commentWrite" parameterType="ssg.com.a.dto.NewsComment">
	insert into news_comment(post_num, user_id, content, write_date, ref, step, depth, del)
	values(#{seq}, #{user_id}, #{content}, now(), 
	(select ifnull(max(ref),0)+1 from news_comment a), 0, 0, 0 )
</insert>

<insert id="commentAnswer" parameterType="ssg.com.a.dto.NewsComment">
	insert into news_comment(post_num, user_id, content, write_date, ref, step, depth, del)
	values(#{post_num}, #{user_id}, #{content}, now(),
			 (select ref from news_comment a where seq=#{seq}),
			 (select step from news_comment b where seq=#{seq})+1,
			 (select depth from news_comment c where seq=#{seq})+1,
			 0)
</insert>

<update id="commentAnswerUpdate" parameterType="ssg.com.a.dto.NewsComment">
	update news_comment
	set step=step+1
	where ref=(select ref from (select ref from news_comment a where seq=#{seq}) A)
		and step>(select step from (select step from news_comment b where seq=#{seq}) B)
</update>
<!-- 목록 -->
<select id="commentList" parameterType="ssg.com.a.dto.NewsParam" resultType="ssg.com.a.dto.NewsComment">
	select seq, post_num, user_id, content, write_date, ref, step, depth, del
	from news_comment
	where post_num=#{seq}
	order by ref desc, step asc
	limit ${(pageNumber * 10)}, 10
</select>

<select id="getAllComment" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
	select count(*) 
	from news_comment
	where post_num=#{seq}
</select>

<!-- 댓글 삭제 -->
<select id="commentGet" parameterType="ssg.com.a.dto.NewsComment" resultType="ssg.com.a.dto.NewsComment">
	select *
	from news_comment
	where post_num=#{post_num} and seq=#{seq}
</select>

<update id="commentDelete" parameterType="ssg.com.a.dto.NewsComment">
	update news_comment
	set del=1
	where post_num=#{post_num} and seq=#{seq}
</update>



<select id="mypageNewsAllComment" parameterType="java.lang.String" resultType="java.lang.Integer">
	select count(*) 
	from news_comment
	where user_id=#{user_id} and del=0
</select>

<select id="mypageNewsCommentList" parameterType="ssg.com.a.dto.MypageParam" resultType="ssg.com.a.dto.MypageNewsComment">
	select nc.seq as ncseq, nc.user_id as ncuser_id, nc.content, nc.write_date, nc.del as ncdel, n.seq as nseq, n.title
	from news_comment nc, news n
	where nc.post_num = n.seq and nc.user_id=#{user_id} and nc.del=0
	order by nc.write_date desc
	limit ${(pageNumber * 10)}, 10
</select>

<update id="mypageNewsCommentDel" parameterType="java.lang.Integer">
	update news_comment
	set del=1
	where seq=#{seq}
</update>

</mapper>














